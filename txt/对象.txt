JS中创建值有两种方式
	 1，字面量表达式
	var obj = {};
	2,构造函数模式
	var obj = new Object()
不管事哪一种方式创造出来的都是Object类的实例，而实例之间是独立分开的，所以 var XXX = {}这种模式就是JS中的单例模式；

面试中问你什么是单例模式，但是你写出来是var obj = {};面试官说这不是单例模式吧，可以很明确的说  这个就是单例模式字面量表达式，而你想要的是new Object是一个构造函数模式！

基本数据类型是基于两种不同的模式创建出来的值是不一样
基于字面量方式创建出来的值是基本类型值
基于构造函数创建出来的值是引用类型


return是一个基本值的时候，返回的结果依然是类的实例，没有受到影响。
如果返回的是引用值，则会把默认返回值实例覆盖，此时接收到的结果就不在是当前类的实例；
构造函数执行的时候，尽量减少return使用，防止覆盖实例

hasOwnProperty：检测当前属性是否为对象的私有属性（不仅要有这个属性名，而且还必须还是私有的才可以）
hasPubproperty,检测当前属性是否为对象的公有属性。

in运算符，它能枚举到原型